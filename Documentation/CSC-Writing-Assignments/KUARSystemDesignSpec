Design Specification for KUAR System
CSC354 Introduction to Software Engineering, Dr. Dale Parson, Spring 2015
KUAR Visualization Project
REPLACE THIS LINE WITH THE NAME OF THE TEAM
Steven Gantz, Lori Bogumil, and Justin Hartz
1.	Deployment (Justin Hartz)
a.	The User
The first node in this deployment diagram is the user. The user is a key part of this and most every computer science project ever created. Without the user there would be nothing to start the application and interact with it. The user however is not the most used outside stimulus for this project. For ease of use and for a better overall project the user should only have to help push the application in the right direction. 
b.	Tablet/ Smart Phone
The next node is the tablet or smartphone. This is where the application will be ran and interacted with. The tablet or smartphone will have the most to do with how smoothly and efficiently the program runs and its ease of use. Depending on the ram and processor of the device the application may run faster or slower. Most often but not always the case a smartphone is very small in comparison to a tablet. For users with bad eyesight this could cause an issue since everything on the screen would have to be scaled down in order to fit. Also battery life on different devices is different. Running an app that takes network or GPS information could drain the battery of a device with poor battery life. Overall this node in the diagram may have the most to do with how the application runs.
c.	Internet
Next is the internet. This node plays a small but important role in the application. This is where the application will be developed from. In order to download the application there is two ways in which it can be done. The first way is that the application can be downloaded from google play, an application store run by google for use with android devices that is very similar to the app store run by Apple. Another way the application can be downloaded is from a third party site that has a link to the download and can be downloaded directly from the site. The internet also has one other role. The application can use the internet in order to get the location of the device via GPS.

d.	GPS
The GPS is the way that the application knows where we are standing on campus. This is going to be used by the application in two ways. The first is in the 2 dimensional map portion of the app. In this part of the app the GPS will be used to show the user approximately where they are. The other way the GPS will be used is in the Augmented Reality portion of the app. In this part of the app the GPS will be used in order to help find where you are so the app can determine which data to show to the user.
e.	Gyroscope
The gyroscope is a hardware component inside the tablet that will allow the application to know what angle the tablet or smartphone is at. This is important so that the application can tell if the phone is looking above a building below a building or at a building based on the angle the phone is at. This will also help to put information on the screen in an accurate position. If the building is higher on the camera the information should be moved accordingly, the same would hold if the building is low on the camera. The gyroscope is also used to tell if the phone is oriented in a vertical or horizontal position.
f.	Camera
The next node is the camera. This is used in the Augmented Reality portion of the application very heavily. The entire screen while in Augmented Reality Mode is the camera. This will give the user the ability to see the information about the buildings. Through the camera they will see the buildings with the information and helpful buttons surrounding them. If the user is looking at several building in the same camera shot there will be little pop up bubbles showing the name of the building and a button to click for more information.
g.	KU Buildings
The final node in this diagram is the buildings of Kutztown University. Without these buildings the application would be pointless and would not function. The information shown in the application is based on the building and is displayed based on the buildings location relative to the user and its location in the camera portion of the app. In the 2 dimensional mode of the supplication the buildings are a recognizable button hat the use may click in order to see more information.






1.	Structural (Steven Gantz)
Class Diagram:
The class structure of the application is unique in that it does not have very many components, and everything is GUI driven. There are some library calls that complete specified functions activated by the GUI.
The initial class instantiation of the application is the MainMenu class object. This class handles application instantiation and creates the activity intents for the following options. The user’s options are to open the map activity, open the augmented reality activity, or open the help activity. Each activity, including the main menu activity retrieves its visual contents from an associated xml file. Each class extends an android.activity and are also independent of one another. 
Beginning with the help activity. This activity has no library calls. It uses its associated xml file to display text and images to demonstrate to the user how to use the application. 
Another activity is the augmented reality activity. This activity uses multiple android libraries. The android.hardware.gyroscope, android.hardware.camera, the Mixare augmented reality library, and android.hardware.LocationServices are all used in tandem to create the augmented reality visualization. The augmented reality activity uses major elements from the Mixare augmented reality library, resulting in the class being primarily constructor instantiations and method calls to complete the augmented reality interface. The android.hardware.gryoscope and android.hardware.LocationServices are used in tandem to assess at what point of the user’s screen, if any, augmented reality media should appear. The location services of the device figure out the location coordinates of the device, while the gyroscope uses the Mixare library to figure out at what circular degree to display some image or media. Finally, the android.hardware.camera library is used to display a camera preview that does not take pictures or video, but displays what the device can see from the viewfinder. When the viewfinder view overlaps the circular degree of the gyroscope, the image is displayed from the Mixare library. 
The following activity is the Map activity. The openMap class handles the library instantiations and begins by using android.hardware.LocationServices to reference the device’s location. On the activities’ creation, an overlay image is placed onto the screen with its coordinates offset from the actual earth coordinates of the location specified. An image is then placed at the offset of the actual earth coordinates retrieved by android.hardware.LocationServices, and the overlay coordinates specified by the developer.
The augmented reality activity and Map activity will each have interactive GUI options to bring the user to an information page. This page is implemented using a BuildingInfo interface. The interface contains common values and methods, and is implemented by multiple classes. Each of these classes specify the interface fields, such as building name, purpose, location, adjacent buildings. They then further specify by type of building, either Academic, Utility, or Dorm. Each of these classes have further specifics to them, such as what major they house, what food options are available, and cost of living respectively. These classes each pull their properties from a .properties file that is accessed using the java.util.properties library.
Object Diagram:
The object flow of the application is such that some objects are instantiated for the lifetime of the application, while others are created and destroyed as per their usage. 
When the application begins, the MainMenu object is instantiated, with multiple GUI driven intents set to be activated on GUI selection by the user. At this point in the lifetime, the only existing object is the MainMenu activity. Once one of these intents is performed via GUI selection, that object is created. For example, if the user, selected to enter the Map activity. The MainMenu object would pass an intent to Android which would instantiate a Map object. This Map object and MainMenu object now exist for the lifetime of the runtime. This same process applies to the openAR object and the openHelp object. 
At this point in the application, at least 2 objects, MainMenu and at least one other have been instantiated. If one of those objects is openAR or Map, then the possibility of the user selecting a GUI option for opening building information is possible. Should this occur, the openAR or Map object passes an intent, with added information that contains the name of the building to Android. When Android instantiates the activity object for building info, the object created is an implementation of the BuildingInfo interface. These objects exist only while the user is still looking at them. When the user switches to another activity object via GUI events, the object created to display info is immediately destroyed in preparation for the user to select either the same, a new building, or no building at all. 

2.	Behavior (Lori Bogumil)
It is important to note that this application has no decision logic.  Every change that is occurring is GUI driven in the application by the user on their handheld device.
Once the application is downloaded to the user’s device, they will be able to click on the icon to open the application.  A loading page will appear momentarily while the application is directing the user to the main menu screen.  The main functionality of the main menu screen is to display three options to the user: Map View, AR View, and Help.  The application will direct the user to a different page based on their choice on the main menu.

Help button:
If the user clicks the Help button, a page will appear with directions on how to navigate and utilize the application properly.  This will ultimately show a step by step guide with images so anyone can learn how to use the application.
AR View button:
If the user clicks the AR View button, a popup will prompt the user to allow access to the camera on their device.  Once this is allowed, a page will appear that will open the camera.  From there, if the user is located on the Kutztown University campus, it will recognize any building they point their camera at.  On the device’s screen, the user will see an icon pop up that notifies them that the application has recognized a building.  If the user decides they want to see the name of that specific building, they simply click on the floating icon and the building name will show up on screen.  If they want to learn more about the building, they click on the name of the building and an expandable dropdown list will appear providing them with more building dependent options to choose from, like what the building’s main purpose is, what is located in that building, and what departments are located there.  The default selection to be displayed once a user finds a building and has the dropdown shown is the building information.  If they wish to select a different option listed, such as they want to look further into details about a major that resides in that building, they can click on that option and the building info will collapse and their selected option will expand revealing the information desired.
Map View button:
If the user clicks the Map View button, a popup will prompt the user to allow access to the GPS location on their device. Once this is allowed, a page will appear that will open a map of the Kutztown University campus.  The map will then use the device’s GPS location to display an icon with the user’s exact location on campus via the map.  This view also displays a Directions button that when selected will ask the user where they would like to go on campus and provide direction on how to get there via a highlighted route on the map.  The Map View provides similar functionality to the AR View in that it allows the user to select any building with an icon located on the map, this time from anywhere on campus, and follow the same procedure as the AR View in order to see each individual building’s info.
It is important to note that on all three views, Map View, AR View, and the Info, there is a Back button that will take the user back to the main menu at any time.  There is also a toggle button for easier accessibility between the AR View and the Map View.
